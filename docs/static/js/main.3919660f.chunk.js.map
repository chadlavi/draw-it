{"version":3,"sources":["App.js","useClickAway.js","index.js"],"names":["defaultProps","loadTimeOffset","lazyRadius","brushRadius","catenaryColor","gridColor","hideGrid","canvasWidth","canvasHeight","disabled","imgSrc","saveData","immediateLoading","hideInterface","colors","width","Math","ceil","length","App","canvasRef","React","createRef","useState","brushColor","setBrushColor","showColor","setShowColor","setSaveData","paletteRef","callback","innerRef","useRef","callbackRef","useEffect","current","document","addEventListener","handleMouseDown","removeEventListener","e","contains","target","handleClick","useClickAway","props","className","classNames","onChange","canvasContainer","children","toDataURL","ref","onClick","s","role","aria-label","triangle","color","onChangeComplete","c","hex","undo","clear","src","alt","rows","value","readOnly","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"8NAQA,MAAMA,EAAe,CACnBC,eAAgB,EAChBC,WAAY,EACZC,YAAa,EACbC,cAAe,UACfC,UAAW,yBACXC,UAAU,EACVC,YAAa,IACbC,aAAc,IACdC,UAAU,EACVC,OAAQ,GACRC,SAAU,GACVC,kBAAkB,EAClBC,eAAe,GAGXC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAK,UAAqC,GAA/BC,KAAKC,KAAKH,EAAOI,OAAS,GAAhC,MAEI,SAASC,IACtB,MAAMC,EAAYC,IAAMC,UAAU,MADN,EAEQD,IAAME,SAAS,WAFvB,mBAErBC,EAFqB,KAETC,EAFS,OAGMJ,IAAME,UAAS,GAHrB,mBAGrBG,EAHqB,KAGVC,EAHU,OAIIN,IAAME,SAAS,IAJnB,mBAIrBZ,EAJqB,KAIXiB,EAJW,KAStBC,ECtDD,SAAsBC,GAC3B,MAAMC,EAAWC,mBACXC,EAAcD,mBAoCpB,OAlCAE,oBAAU,KACRD,EAAYE,QAAUL,IAGxBI,oBAAU,KAER,OADAE,SAASC,iBAAiB,YAAaC,GAChC,IAAMF,SAASG,oBAAoB,YAAaD,GAEvD,SAASA,EAAgBE,GAErBT,EAASI,SACTF,EAAYE,UACXJ,EAASI,QAAQM,SAASD,EAAEE,SAE7BT,EAAYE,QAAQK,KAGvB,IAEHN,oBAAU,KAER,OADAE,SAASC,iBAAiB,QAASM,GAC5B,IAAMP,SAASG,oBAAoB,QAASI,GAEnD,SAASA,EAAYH,GAEjBT,EAASI,SACTF,EAAYE,UACXJ,EAASI,QAAQM,SAASD,EAAEE,SAE7BT,EAAYE,QAAQK,KAGvB,IAEIT,EDgBYa,CAAa,KAC9BjB,GAAa,KAaTkB,EAAK,2BACN7C,GADM,IAET8C,UAAWC,IAAW,UACtBC,SARyB,KACzB,MAAMrC,EAZNS,EAAUe,QAAQc,gBAAgBC,SAAS,GAAGC,YAa9CvB,EAAYjB,IAOZyC,IAAKhC,EACLI,aACApB,cAAeoB,IAGjB,OACE,yBAAKsB,UAAU,OACb,kBAAC,IAAeD,GAChB,yBAAKC,UAAU,oBACb,yBAAKM,IAAKvB,EAAYiB,UAAU,oBAC9B,4BACEA,UAAU,UACVO,QAAS,KACP1B,EAAc2B,IAAOA,KAGvB,0BAAMC,KAAK,MAAMC,aAAW,IAA5B,gBAEQ,IARV,SAWC9B,GACC,yBAAKoB,UAAU,iBACb,kBAAC,IAAD,CACEW,SAAU,OACVC,MAAOlC,EACPV,OAAQA,EACRC,MAAOA,EACP4C,iBAAmBC,GAAMnC,EAAcmC,EAAEC,SAKjD,4BACEf,UAAU,OACVO,QAAS,KACPjC,EAAUe,QAAQ2B,SAGpB,0BAAMP,KAAK,MAAMC,aAAW,IAA5B,gBAEQ,IARV,QAWA,4BAAQV,UAAU,QAAQO,QA1DZ,KAClBjC,EAAUe,QAAQ4B,QAClBnC,EAAY,MAyDN,0BAAMkB,UAAU,YAAYS,KAAK,MAAMC,aAAW,IAAlD,gBAEQ,IACR,0BAAMV,UAAU,QAAQS,KAAK,MAAMC,aAAW,IAA9C,gBAEQ,IANV,UAgBD7C,GACC,oCACE,yBAAKqD,IAAKrD,EAAUsD,IAAI,KACxB,8BAAUC,KAAM,GAAIC,MAAOxD,EAAUyD,UAAQ,MEpIvD,MAAMC,EAAcjC,SAASkC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtD,EAAD,OAEFkD,I","file":"static/js/main.3919660f.chunk.js","sourcesContent":["import React from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport { GithubPicker } from \"react-color\";\nimport \"./styles.css\";\nimport { useClickAway } from \"./useClickAway\";\n\nimport classNames from \"classnames\";\n\nconst defaultProps = {\n  loadTimeOffset: 5,\n  lazyRadius: 0,\n  brushRadius: 2,\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  hideGrid: true,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false,\n};\n\nconst colors = [\n  \"#B80000\",\n  \"#DB3E00\",\n  \"#FCCB00\",\n  \"#008B02\",\n  \"#006B76\",\n  \"#1273DE\",\n  \"#004DCF\",\n  \"#5300EB\",\n  \"#000000\",\n  \"#EB9694\",\n  \"#FAD0C3\",\n  \"#FEF3BD\",\n  \"#C1E1C5\",\n  \"#BEDADC\",\n  \"#C4DEF6\",\n  \"#BED3F3\",\n  \"#D4C4FB\",\n  \"#CCCCCC\",\n];\n\nconst width = `${Math.ceil(colors.length / 2) * 32}px`;\n\nexport default function App() {\n  const canvasRef = React.createRef(null);\n  const [brushColor, setBrushColor] = React.useState(\"#000000\");\n  const [showColor, setShowColor] = React.useState(false);\n  const [saveData, setSaveData] = React.useState(\"\");\n\n  const getImg = () =>\n    canvasRef.current.canvasContainer.children[1].toDataURL();\n\n  const paletteRef = useClickAway(() => {\n    setShowColor(false);\n  });\n\n  const handleClear = () => {\n    canvasRef.current.clear();\n    setSaveData(\"\");\n  };\n\n  const handleCanvasChange = () => {\n    const saveData = getImg();\n    setSaveData(saveData);\n  };\n\n  const props = {\n    ...defaultProps,\n    className: classNames(\"canvas\"),\n    onChange: handleCanvasChange,\n    ref: canvasRef,\n    brushColor,\n    catenaryColor: brushColor,\n  };\n\n  return (\n    <div className=\"App\">\n      <CanvasDraw {...props} />\n      <div className=\"button-container\">\n        <div ref={paletteRef} className=\"picker-container\">\n          <button\n            className=\"palette\"\n            onClick={() => {\n              setShowColor((s) => !s);\n            }}\n          >\n            <span role=\"img\" aria-label=\"\">\n              üé®\n            </span>{\" \"}\n            color\n          </button>\n          {showColor && (\n            <div className=\"picker-popper\">\n              <GithubPicker\n                triangle={\"hide\"}\n                color={brushColor}\n                colors={colors}\n                width={width}\n                onChangeComplete={(c) => setBrushColor(c.hex)}\n              />\n            </div>\n          )}\n        </div>\n        <button\n          className=\"undo\"\n          onClick={() => {\n            canvasRef.current.undo();\n          }}\n        >\n          <span role=\"img\" aria-label=\"\">\n            ‚Ü©Ô∏è\n          </span>{\" \"}\n          undo\n        </button>\n        <button className=\"clear\" onClick={handleClear}>\n          <span className=\"non-hover\" role=\"img\" aria-label=\"\">\n            üí£\n          </span>{\" \"}\n          <span className=\"hover\" role=\"img\" aria-label=\"\">\n            üß®\n          </span>{\" \"}\n          clear\n        </button>\n        {/* <button className=\"save\" onClick={handleSave}>\n          <span role=\"img\" aria-label=\"\">\n            üíæ\n          </span>{\" \"}\n          save\n        </button> */}\n      </div>\n      {saveData && (\n        <>\n          <img src={saveData} alt=\"\" />\n          <textarea rows={10} value={saveData} readOnly />\n        </>\n      )}\n    </div>\n  );\n}\n","import { useRef, useEffect } from \"react\";\n\nexport function useClickAway(callback) {\n  const innerRef = useRef();\n  const callbackRef = useRef();\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleMouseDown);\n    return () => document.removeEventListener(\"mousedown\", handleMouseDown);\n\n    function handleMouseDown(e) {\n      if (\n        innerRef.current &&\n        callbackRef.current &&\n        !innerRef.current.contains(e.target)\n      ) {\n        callbackRef.current(e);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n    return () => document.removeEventListener(\"click\", handleClick);\n\n    function handleClick(e) {\n      if (\n        innerRef.current &&\n        callbackRef.current &&\n        !innerRef.current.contains(e.target)\n      ) {\n        callbackRef.current(e);\n      }\n    }\n  }, []);\n\n  return innerRef;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}